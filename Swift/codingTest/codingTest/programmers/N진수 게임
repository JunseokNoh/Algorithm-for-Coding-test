import Foundation

func trsnsform(_ result: inout [String], _ n: Int, _ num: Int){
    var num = num
    var temp = [String]()
    
    if num == 0 {
        temp.append("0")
    }
    
    while num > 0 {
        if num % n < 10 {
            temp.append(String(num % n))
        }else{
            temp.append(String(UnicodeScalar(num % n - 10 + 65)!))
        }
        num /= n
    }
    temp.reverse()
    
    for i in temp{
        result.append(i)
    }
}

func solution(_ n:Int, _ t:Int, _ m:Int, _ p:Int) -> String {
    var val = "", num = 0
    var result = [String]()
    
    while true{
        trsnsform(&result, n, num)
        if result.count >= t * m {
            break
        }
        num += 1
    }
    
    for i in 0..<result.count{
        if i % m + 1 == p{
            val += result[i]
        }
        if val.count == t {
            break
        }
    }
    return val
}

print(solution(2, 4, 2, 1))
print(solution(16, 16, 2, 1))

